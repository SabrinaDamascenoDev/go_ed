{
    "patches": [
        {
            "label": "2025-04-04_16-52-39",
            "content": "@@ -23,428 +23,46 @@\n mt%22%0A\n-%0Atype tupla struct%7B%0A    X int%0A    Y int%0A%7D%0Afunc main() %7B%0A    var quantidadeGomos int%0A    var direcao string%0A%0A    fmt.Scan(&quantidadeGomos, &direcao)%0A%0A     var posicaoCobra %5B%5Dtupla%0A%0A    for i := 0; i %3C quantidadeGomos; i++%7B%0A        var x, y int%0A        fmt.Scan(&x, &y)%0A        posicaoCobra = append(posicaoCobra, tupla%7BX:x, Y:y%7D)%0A    %7D%0A%0A    for i := 0; i %3C len(posicaoCobra); i++%7B%0A        fmt.Print(posicaoCobra%5Bi%5D)%0A    %7D\n+func main() %7B%0A    fmt.Println(%22qxcode%22)\n %0A%7D%0A\n"
        },
        {
            "label": "2025-04-05_16-50-07",
            "content": "@@ -25,20 +25,21 @@\n %22%0A%0Atype \n-Gomo\n+tupla\n  struct%7B\n@@ -197,99 +197,14 @@\n a %5B%5D\n-Gomo%0A%0A     // Povoando array com pares x, y dos valores da posi%C3%A7%C3%A3o de cada gomo da cobrinha\n+tupla%0A\n %0A   \n@@ -332,20 +332,21 @@\n oCobra, \n-Gomo\n+tupla\n %7BX:x, Y:\n"
        },
        {
            "label": "2025-04-05_17-03-18",
            "content": "@@ -441,144 +441,8 @@\n    %7D\n-%0A    var primeiraPosi%C3%A7%C3%A3o Gomo = posicaoCobra%5B0%5D%0A%0A    for i := 0; i %3C len(posicaoCobra); i++%7B%0A        if direcao == %22L%22%7B%0A%0A        %7D%0A    %7D\n %0A%0A  \n@@ -520,10 +520,8 @@\n a%5Bi%5D\n-.X\n )%0A  \n"
        },
        {
            "label": "2025-04-05_17-06-10",
            "content": "@@ -587,25 +587,24 @@\n for \n-_, gomo := range \n+i := 0; i %3C len(\n posi\n@@ -611,16 +611,22 @@\n caoCobra\n+); i++\n %7B%0A      \n@@ -640,34 +640,26 @@\n rint\n-ln(%22%25v %25v%22, gomo.X, gomo.Y\n+(posicaoCobra%5Bi%5D.X\n )%0A  \n"
        },
        {
            "label": "2025-04-05_17-08-04",
            "content": "@@ -442,18 +442,16 @@\n   %7D%0A    \n-//\n var prim\n"
        },
        {
            "label": "2025-04-05_17-08-27",
            "content": "@@ -642,12 +642,12 @@\n n(%22%25\n-d %25d\n+v %25v\n %22, g\n"
        },
        {
            "label": "2025-04-05_17-08-49",
            "content": "@@ -637,18 +637,17 @@\n rint\n-f(%22%25v %25v%5Cn\n+ln(%22%25d %25d\n %22, g\n"
        },
        {
            "label": "2025-04-05_17-09-07",
            "content": "@@ -438,24 +438,26 @@\n )%0A    %7D%0A    \n+//\n var primeira\n@@ -492,86 +492,8 @@\n 0%5D%0A%0A\n-    if direcao == %22L%22%7B%0A        posicaoCobra%5B0%5D.X = posicaoCobra%5B0%5D.X-1%0A    %7D%0A%0A\n     \n@@ -505,9 +505,9 @@\n  := \n-1\n+0\n ; i \n@@ -544,134 +544,37 @@\n     \n-var posicaoSeguinte Gomo = posicaoCobra%5Bi%5D%0A        posicaoCobra%5Bi%5D = primeiraPosi%C3%A7%C3%A3o%0A        primeiraPosi%C3%A7%C3%A3o = posicaoSeguinte\n+if direcao == %22L%22%7B%0A%0A        %7D\n %0A   \n"
        },
        {
            "label": "2025-04-05_17-19-18",
            "content": "@@ -566,87 +566,8 @@\n    %7D\n- else if direcao == %22R%22%7B%0A        posicaoCobra%5B0%5D.X = posicaoCobra%5B0%5D.X+1%0A     %7D\n %0A%0A  \n"
        },
        {
            "label": "2025-04-05_17-22-08",
            "content": "@@ -640,85 +640,8 @@\n +1%0A \n-   %7D else if direcao == %22U%22%7B%0A        posicaoCobra%5B0%5D.Y = posicaoCobra%5B0%5D.Y-1%0A\n     \n"
        },
        {
            "label": "2025-04-05_17-23-06",
            "content": "@@ -722,69 +722,8 @@\n    %7D\n- else %7B%0A        posicaoCobra%5B0%5D.Y = posicaoCobra%5B0%5D.Y+1%0A    %7D\n %0A%0A  \n"
        },
        {
            "label": "2025-04-05_17-23-23",
            "content": "@@ -60,17 +60,16 @@\n Y int%0A%7D%0A\n-%0A\n func mai\n@@ -442,13 +442,8 @@\n   %7D%0A\n-    %0A\n     \n"
        },
        {
            "label": "2025-04-05_20-20-36",
            "content": "package main\nimport \"fmt\"\n\ntype Gomo struct{\n    X int\n    Y int\n}\n\nfunc main() {\n    var quantidadeGomos int\n    var direcao string\n\n    fmt.Scan(&quantidadeGomos, &direcao)\n\n     var posicaoCobra []Gomo\n\n     // Povoando array com pares x, y dos valores da posi\u00e7\u00e3o de cada gomo da cobrinha\n    for i := 0; i < quantidadeGomos; i++{\n        var x, y int\n        fmt.Scan(&x, &y)\n        posicaoCobra = append(posicaoCobra, Gomo{X:x, Y:y})\n    }\n    \n    var primeiraPosi\u00e7\u00e3o Gomo = posicaoCobra[0]\n\n    if direcao == \"L\"{\n        posicaoCobra[0].X = posicaoCobra[0].X-1\n    } else if direcao == \"R\"{\n        posicaoCobra[0].X = posicaoCobra[0].X+1\n    } else if direcao == \"U\"{\n        posicaoCobra[0].Y = posicaoCobra[0].Y-1\n    } else {\n        posicaoCobra[0].Y = posicaoCobra[0].Y+1\n    }\n\n    for i := 1; i < len(posicaoCobra); i++{\n        var posicaoSeguinte Gomo = posicaoCobra[i]\n        posicaoCobra[i] = primeiraPosi\u00e7\u00e3o\n        primeiraPosi\u00e7\u00e3o = posicaoSeguinte\n    }\n\n    for _, gomo := range posicaoCobra{\n        fmt.Printf(\"%v %v\\n\", gomo.X, gomo.Y)\n    }\n}\n"
        }
    ]
}